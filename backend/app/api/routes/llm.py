from fastapi import APIRouter, HTTPException
from pydantic import BaseModel, Field
from langchain_openai import ChatOpenAI
from langchain_core.prompts import PromptTemplate
from langchain_core.output_parsers import StrOutputParser

router = APIRouter()

class QueryRequest(BaseModel):
    diets: list[str] = Field(..., example=["Paleo", "Keto"], description="List of diets to consider")
    vegetables: list[str] = Field(..., example=["Carrots", "Beetroot", "Pumpkin"], description="List of vegetables available")

class QueryResponse(BaseModel):
    response: str = Field(..., example="Here is a meal plan based on your diets and vegetables...", description="Response generated by the chatbot")

@router.post("/llm-query", response_model=QueryResponse, summary="Generate meal plan", description="Generate a meal plan based on selected diets and available vegetables.")
def llm_query(request: QueryRequest):
    """
    Generate a meal plan based on the provided diets and vegetables.

    Args:
        request (QueryRequest): Request object containing diets and vegetables.

    Returns:
        QueryResponse: Response object containing the generated meal plan.
    """
    try:
        diets_str = ', '.join(request.diets)
        vegetables_str = ', '.join(request.vegetables)
        query_str = f"Diets: {diets_str}. Vegetables: {vegetables_str}."
        
        template = """You are the biggest recipe book in the world. Please help the user with creating a weekly mealplan (breakfast, lunch, dinner) based on their chosen diets.
        It also should include the vegetables they like. Here is
        their request: {request}
        """
        model = ChatOpenAI(model_name="gpt-3.5-turbo")
        parser = StrOutputParser()
        prompt = PromptTemplate(template=template, input_variables=["request"])
        chain = prompt | model | parser

        response = chain.invoke({"request": query_str})
        print(response)
        return {"response": response}
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))